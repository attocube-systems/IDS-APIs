<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CSharpAPIDLL</name>
    </assembly>
    <members>
        <member name="T:Attocube.API.Error.AlreadyConnectedException">
            <summary>
            Exception that is thrown if a the API_Connect method is called again, after it's been called already
            </summary>
        </member>
        <member name="M:Attocube.API.Error.AlreadyConnectedException.#ctor">
            <summary>
            Standard constructor which sets the default exception message
            </summary>
        </member>
        <member name="T:Attocube.API.Error.AttocubeAPIException">
            <summary>
            Base exception for all custom exceptions in the Attocube API library
            </summary>
        </member>
        <member name="F:Attocube.API.Error.AttocubeAPIException.ComErrorHighBytes">
            <summary>
            High bytes of the COM HResult generated by the Attocube.API system
            Error are returned as 0x8111yyyy where the "yyyy" stands for the internal error number
            </summary>
        </member>
        <member name="P:Attocube.API.Error.AttocubeAPIException.ErrorCode">
            <summary>
            Public property for the error code that this exception contains.
            This can be an internal error code (warning from 0x000 through 0x7FF, actual errors 0x800 through 0x1000)
            or it can be an interface-DLL related error as defined in the <seealso cref="T:Attocube.API.Error.ErrorCodes">ErrorCodes</seealso> class
            </summary>
        </member>
        <member name="M:Attocube.API.Error.AttocubeAPIException.#ctor">
            <summary>
            Standard, parameter-less constructor
            </summary>
        </member>
        <member name="M:Attocube.API.Error.AttocubeAPIException.#ctor(System.String)">
            <summary>
            Extended constructor which takes an exception message
            </summary>
            <param name="message">The exception message</param>
        </member>
        <member name="M:Attocube.API.Error.AttocubeAPIException.#ctor(System.String,System.Int32)">
            <summary>
            Extended constructor which takes an error code and an exception message 
            </summary>
            <param name="message">The exception message</param>
            <param name="errorCode">The numerical error code</param>
        </member>
        <member name="M:Attocube.API.Error.AttocubeAPIException.#ctor(System.String,System.Exception)">
            <summary>
            Extended constructor which takes an exception message and a .NET inner exception
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The "inner" .NET exception to pass on</param>
        </member>
        <member name="M:Attocube.API.Error.AttocubeAPIException.#ctor(System.String,System.Int32,System.Exception)">
            <summary>
            Extended constructor which takes an exception message, an error code and a .NET inner exception
            </summary>
            <param name="message">The exception message</param>
            <param name="errorCode">The numerical error code</param>
            <param name="innerException">The "inner" .NET exception to pass on</param>
        </member>
        <member name="T:Attocube.API.Error.ErrorCodes">
            <summary>
            Attocube.API defined error codes
            </summary>
        </member>
        <member name="M:Attocube.API.Error.ErrorCodes.IsWarning(System.Int32)">
            <summary>
            Determines that this error code is really "only" a warning -> do not throw an exception, just return response as is
            </summary>
            <param name="errorCode">Error code to be checked</param>
            <returns>True, if this error code is simply a warning - false if not</returns>
        </member>
        <member name="M:Attocube.API.Error.ErrorCodes.IsError(System.Int32)">
            <summary>
            Determines that this error code truly is an error that necessitates throwing an exception
            </summary>
            <param name="errorCode">Error code to be checked</param>
            <returns>True, if this error code is in fact a "real" error - false if not</returns>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.DllAlreadyConnected">
            <summary>
            0x1001 - Client has already been connected 
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.DllNotConnected">
            <summary>
            0x1002 - Client is not yet connected
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.JsonRpcCallFailed">
            <summary>
            0x1003 - Something else in the process of the JSON RPC call went wrong
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.ResponseIsNull">
            <summary>
            0x1004 - Response from JSON RPC call is NULL
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.ResponseErrorAndResultNull">
            <summary>
            0x1005 - Call returned a response with both the .Error and
            .Result property as NULL 
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.ResponseResultIsNotAnArray">
            <summary>
            0x1006 - Call returned a response, but the .Result property 
            is not a valid JSON array
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.ResponseReturnsToFewArguments">
            <summary>
            0x1007 - Call returned a response, but the .Result property 
            is not a valid JSON array
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.TooFewArgumentsToCall">
            <summary>
            0x1007 - API call needs more arguments
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.NoError">
            <summary>
            Indicator for "all OK - no error"
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.JsonRpcParseError">
            <summary>
            JSON RPC 2.0 (-32700 / 0xFFFF8044): Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.JsonRpcInvalidRequest">
            <summary>
            JSON RPC 2.0 (-32600 / 0xFFFF80A8): The JSON sent is not a valid Request object.
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.JsonRpcMethodNotFound">
            <summary>
            JSON RPC 2.0 (-32601 / 0xFFFF80A7): The method does not exist / is not available.
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.JsonRpcInvalidParams">
            <summary>
            JSON RPC 2.0 (-32602 / 0xFFFF80A6): Invalid method parameter(s).
            </summary>
        </member>
        <member name="F:Attocube.API.Error.ErrorCodes.JsonRpcInternalError">
            <summary>
            JSON RPC 2.0 (-32603 / 0xFFFF80A5): Internal JSON-RPC error.
            </summary>
        </member>
        <member name="T:Attocube.API.Error.ErrorMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Attocube.API.Error.ErrorMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Attocube.API.Error.ErrorMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Attocube.API.Error.ErrorMessages.err_AlreadyConnected">
            <summary>
              Looks up a localized string similar to Attocube.API is already connected.
            </summary>
        </member>
        <member name="P:Attocube.API.Error.ErrorMessages.err_BothResultAndErrorAreNull">
            <summary>
              Looks up a localized string similar to Both &apos;.Error&apos; *and* &apos;.Result&apos; are NULL.
            </summary>
        </member>
        <member name="P:Attocube.API.Error.ErrorMessages.err_APISignalledError">
            <summary>
              Looks up a localized string similar to Embedded system signalled an error condition.
            </summary>
        </member>
        <member name="P:Attocube.API.Error.ErrorMessages.err_InvalidIpAddress">
            <summary>
              Looks up a localized string similar to IP address is invalid.
            </summary>
        </member>
        <member name="P:Attocube.API.Error.ErrorMessages.err_NotConnected">
            <summary>
              Looks up a localized string similar to Attocube.API is not yet connected.
            </summary>
        </member>
        <member name="P:Attocube.API.Error.ErrorMessages.err_ResponseIsNull">
            <summary>
              Looks up a localized string similar to The response object is NULL.
            </summary>
        </member>
        <member name="P:Attocube.API.Error.ErrorMessages.err_ResponseStreamIsNull">
            <summary>
              Looks up a localized string similar to Response Stream is NULL.
            </summary>
        </member>
        <member name="P:Attocube.API.Error.ErrorMessages.err_ResultIsNotAnArray">
            <summary>
              Looks up a localized string similar to The &apos;.Result&apos; property is not a valid JSON array.
            </summary>
        </member>
        <member name="P:Attocube.API.Error.ErrorMessages.err_TooFewArguments">
            <summary>
              Too few Arguments
            </summary>
        </member>
        <member name="T:Attocube.API.Error.NotConnectedException">
            <summary>
            Exception that is thrown if a method is being executed without the DLL being connected to a host system
            </summary>
        </member>
        <member name="M:Attocube.API.Error.NotConnectedException.#ctor">
            <summary>
            Standard constructor which sets the default exception message
            </summary>
        </member>
        <member name="T:Attocube.API.Utils.AssemblyInfoGetter">
            <summary>
            Helper class to determine the assembly metadata information
            </summary>
        </member>
        <member name="M:Attocube.API.Utils.AssemblyInfoGetter.GetAssemblyInfo">
            <summary>
                Gathers assembly info for the currently executing assembly (GetExecutingAssembly)
            </summary>
            <returns>Metadata information for the currently executing assembly</returns>       
        </member>
        <member name="M:Attocube.API.Utils.AssemblyInfoGetter.GetAssemblyInfo(System.Reflection.Assembly)">
            <summary>
                Gathers assembly info for the assembly being passed in as parameter
            </summary>
            <param name="assembly">Assembly to use for metadata discovery</param>
            <returns>Metadata information for this assembly</returns>
        </member>
        <member name="T:Attocube.API.Utils.AssemblyMetadata">
            <summary>
                Metadata class with the assembly information gathered
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.Company">
            <summary>
                Company name
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.Configuration">
            <summary>
                Assembly configuration
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.Copyright">
            <summary>
                Copyright information
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.Culture">
            <summary>
                "Culture" information
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.Description">
            <summary>
                Description from the assembly
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.Product">
            <summary>
                Product information from the assembly
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.Title">
            <summary>
                Title from the assembly
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.Trademark">
            <summary>
                Trademark info from the assembly
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.Version2">
            <summary>
                Version number of the assembly, to level 2 (e.g. "2.21")
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.Version3">
            <summary>
                Version number of the assembly, to level 3 (e.g. "2.21.4")
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.Version4">
            <summary>
                Version number of the assembly, to level 4 (e.g. "2.21.4.5056")
            </summary>
        </member>
        <member name="P:Attocube.API.Utils.AssemblyMetadata.CompleteVersion">
            <summary>
                Complete version info from assembly
            </summary>
        </member>
        <member name="T:Attocube.API.Data.DiscoveryData">
            <summary>
            Class for handling the data of devices discovered using the discovery protocol
            </summary>
        </member>
        <member name="M:Attocube.API.Data.DiscoveryData.#ctor">
            <summary>
            Default, parameter-less constructor
            </summary>
        </member>
        <member name="M:Attocube.API.Data.DiscoveryData.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Extended constructor with all parameters needed to create this instance
            </summary>
            <param name="deviceName">Name setted by user setDeviceName</param>
            <param name="modelName">type of device</param>
            <param name="serialNumber">serial number</param>
            <param name="lockStatus">lock status (locked or unlocked)</param>
            <param name="ipAddress">ip address of the device</param>
            <param name="macAddress">mac address of the device</param>
        </member>
        <member name="P:Attocube.API.Data.DiscoveryData.DeviceName">
            <summary>
            Name setted by user setDeviceName
            </summary>
        </member>
        <member name="P:Attocube.API.Data.DiscoveryData.ModelName">
            <summary>
            type of device
            </summary>
        </member>
        <member name="P:Attocube.API.Data.DiscoveryData.SerialNumber">
            <summary>
            serial number
            </summary>
        </member>
        <member name="P:Attocube.API.Data.DiscoveryData.LockStatus">
            <summary>
            lock status (locked or unlocked)
            </summary>
        </member>
        <member name="P:Attocube.API.Data.DiscoveryData.IpAddress">
            <summary>
            ip address of the device
            </summary>
        </member>
        <member name="P:Attocube.API.Data.DiscoveryData.MacAddress">
            <summary>
            mac address of the device
            </summary>
        </member>
        <member name="T:Attocube.API.AttocubeAPI">
            <summary>
            AttocubeAPI implementation class
            </summary>
        </member>
        <member name="F:Attocube.API.AttocubeAPI._baseUrl">
            <summary>
            Base-URL for the web service call
            </summary>
        </member>
        <member name="P:Attocube.API.AttocubeAPI.LastRequestJson">
            <summary>
            Property that contains the last request (in JSON format) made to the JSON RPC system
            </summary>
        </member>
        <member name="P:Attocube.API.AttocubeAPI.LastResponseJson">
            <summary>
            Property that contains the last response (in JSON format) received from the JSON RPC system
            </summary>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.#ctor">
            <summary>
            Standard, parameter-less constructor - will create a standard, real JsonRpcClient when needed
            </summary>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.#ctor(Attocube.API.JsonRpc.IJsonRpcClient)">
            <summary>
            Extended constructor, which takes a pre-made IJsonRpcClient (possibly a mock for testing)
            and does not internally create a standard, real-life "JsonRpcClient" instance
            </summary>
            <param name="rpcClient">Ready-made "IJsonRpcClient" (possibly a mock for unit testing)</param>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.Connect(System.String,System.Int32)">
            <summary>
            Connect to the target with a hostname or IP address and port provided.
            If a valid port number (> 0) is supplied, the target URL is constructed like this:
                 http://$(ipAddress):$(port)/api/json
            If an invalid port number (0 or negative value) is supplied, then the string in "ipAddress" is taken
            as the literal string for the base service URL (used for e.g. testing)
            </summary>
            <param name="ipAddress">IP Address for target system</param>
            <param name="port">Port</param>
            <exception cref="T:Attocube.API.Error.AlreadyConnectedException">Thrown if the client is already connected</exception>
            <exception cref="T:System.ArgumentException">Thrown if the supplied IP address is invalid</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.Disconnect">
            <summary>
            Disconnect from the target system
            </summary>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.GetDllVersion">
            <summary>
            Returns the current version of the Attocube API DLL
            </summary>
            <returns>Version in the form X.Y.Z</returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallNoReturnValues(System.Boolean,System.Object[])">
            <summary>
            Calls the API with no return values
            </summary>
            <returns>Return value</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallOneReturnValue``1(System.Boolean,System.Object[])">
            <summary>
            Calls the API with one return value
            </summary>
            <returns>Return value</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallTwoReturnValues``2(System.Boolean,System.Object[])">
            <summary>
            Calls the API with two return values
            </summary>
            <returns>Return tuple of two values</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallThreeReturnValues``3(System.Boolean,System.Object[])">
            <summary>
            Calls the API with three return values
            </summary>
            <returns>Return tuple of three values</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallFourReturnValues``4(System.Boolean,System.Object[])">
            <summary>
            Calls the API with four return values
            </summary>
            <returns>Return tuple of four values</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallFiveReturnValues``5(System.Boolean,System.Object[])">
            <summary>
            Calls the API with five return values
            </summary>
            <returns>Return tuple of five values</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallSixReturnValues``6(System.Boolean,System.Object[])">
            <summary>
            Calls the API with six return values
            </summary>
            <returns>Return tuple of six values</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallSevenReturnValues``7(System.Boolean,System.Object[])">
            <summary>
            Calls the API with seven return values
            </summary>
            <returns>Return tuple of seven values</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallEightReturnValues``8(System.Boolean,System.Object[])">
            <summary>
            Calls the API with eight return values
            </summary>
            <returns>Return tuple of eight values, the last value is a tuple again. The tuple can't handle more columns.</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallNineReturnValues``9(System.Boolean,System.Object[])">
            <summary>
            Calls the API with nine return values
            </summary>
            <returns>Return tuple of nine values, the last value is a tuple again. The tuple can't handle more columns.</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallTwelveReturnValues``12(System.Boolean,System.Object[])">
            <summary>
            Calls the API with twelve return values
            </summary>
            <returns>Return tuple of twelve values, the last value is a tuple again. The tuple can't handle more columns.</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.API_CallTwentyTwoReturnValues``22(System.Boolean,System.Object[])">
            <summary>
            Calls the API with 22 return values
            </summary>
            <returns>Return tuple of 22 values, the last value is a tuple again. The tuple can't handle more columns.</returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
            <exception cref="T:Attocube.API.Error.NotConnectedException">Thrown if the client is not connected</exception>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse0(System.Boolean,Attocube.API.JsonRpc.JsonRpcResponse)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T">Expected type of the return value </typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically an "int", "bool" or "string"</returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse1``1(System.Boolean,Attocube.API.JsonRpc.JsonRpcResponse)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T">Expected type of the return value </typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically an "int", "bool" or "string"</returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse2``2(System.Boolean,Attocube.API.JsonRpc.JsonRpcResponse)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T1">Expected type of the return value </typeparam>
            <typeparam name="T2">Expected type of the return value </typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically a 2-tuple of "int", "bool" or "string" values</returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse3``3(System.Boolean,Attocube.API.JsonRpc.JsonRpcResponse)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T1">Expected type of the return value </typeparam>
            <typeparam name="T2">Expected type of the return value </typeparam>
            <typeparam name="T3">Expected type of the return value </typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically a 3-tuple of "int", "bool" or "string" values</returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse4``4(Attocube.API.JsonRpc.JsonRpcResponse,System.Boolean)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T1">Expected type of the return value </typeparam>
            <typeparam name="T2">Expected type of the return value </typeparam>
            <typeparam name="T3">Expected type of the return value </typeparam>
            <typeparam name="T4">Expected type of the return value </typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically a 4-tuple of "int", "bool" or "string" values</returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse5``5(System.Boolean,Attocube.API.JsonRpc.JsonRpcResponse)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T1">Expected type of the return value </typeparam>
            <typeparam name="T2">Expected type of the return value </typeparam>
            <typeparam name="T3">Expected type of the return value </typeparam>
            <typeparam name="T4">Expected type of the return value </typeparam>
            <typeparam name="T5">Expected type of the return value </typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically a 5-tuple of "int", "bool" or "string" values</returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse6``6(System.Boolean,Attocube.API.JsonRpc.JsonRpcResponse)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T1">Expected type of the return value </typeparam>
            <typeparam name="T2">Expected type of the return value </typeparam>
            <typeparam name="T3">Expected type of the return value </typeparam>
            <typeparam name="T4">Expected type of the return value </typeparam>
            <typeparam name="T5">Expected type of the return value </typeparam>
            <typeparam name="T6">Expected type of the return value </typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically a 6-tuple of "int", "bool" or "string" values</returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse7``7(System.Boolean,Attocube.API.JsonRpc.JsonRpcResponse)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T1">Expected type of the return value </typeparam>
            <typeparam name="T2">Expected type of the return value </typeparam>
            <typeparam name="T3">Expected type of the return value </typeparam>
            <typeparam name="T4">Expected type of the return value </typeparam>
            <typeparam name="T5">Expected type of the return value </typeparam>
            <typeparam name="T6">Expected type of the return value </typeparam>
            <typeparam name="T7">Expected type of the return value </typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically a 7-tuple of "int", "bool" or "string" values</returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse8``8(System.Boolean,Attocube.API.JsonRpc.JsonRpcResponse)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T1">Expected type of the return value </typeparam>
            <typeparam name="T2">Expected type of the return value </typeparam>
            <typeparam name="T3">Expected type of the return value </typeparam>
            <typeparam name="T4">Expected type of the return value </typeparam>
            <typeparam name="T5">Expected type of the return value </typeparam>
            <typeparam name="T6">Expected type of the return value </typeparam>
            <typeparam name="T7">Expected type of the return value </typeparam>
            <typeparam name="T8">Expected type of the return value </typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically a 7-tuple of "int", "bool" or "string" values. The last value is a tuple of addional values. </returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse9``9(System.Boolean,Attocube.API.JsonRpc.JsonRpcResponse)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T1">Expected type of the return value </typeparam>
            <typeparam name="T2">Expected type of the return value </typeparam>
            <typeparam name="T3">Expected type of the return value </typeparam>
            <typeparam name="T4">Expected type of the return value </typeparam>
            <typeparam name="T5">Expected type of the return value </typeparam>
            <typeparam name="T6">Expected type of the return value </typeparam>
            <typeparam name="T7">Expected type of the return value </typeparam>
            <typeparam name="T8">Expected type of the return value </typeparam>
            <typeparam name="T9">Expected type of the return value </typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically a 7-tuple of "int", "bool" or "string" values. The last value is a tuple of addional values. </returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse12``12(System.Boolean,Attocube.API.JsonRpc.JsonRpcResponse)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T1">Expected type of the return value</typeparam>
            <typeparam name="T2">Expected type of the return value</typeparam>
            <typeparam name="T3">Expected type of the return value</typeparam>
            <typeparam name="T4">Expected type of the return value</typeparam>
            <typeparam name="T5">Expected type of the return value</typeparam>
            <typeparam name="T6">Expected type of the return value</typeparam>
            <typeparam name="T7">Expected type of the return value</typeparam>
            <typeparam name="T8">Expected type of the return value</typeparam>
            <typeparam name="T9">Expected type of the return value</typeparam>
            <typeparam name="T10">Expected type of the return value</typeparam>
            <typeparam name="T11">Expected type of the return value</typeparam>
            <typeparam name="T12">Expected type of the return value</typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically a tuple of 12 values, with nested tuples for additional values</returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.HandleResponse22``22(System.Boolean,Attocube.API.JsonRpc.JsonRpcResponse)">
            <summary>
            Method to handle the JSON response
            </summary>
            <typeparam name="T1">Expected type of the return value</typeparam>
            <typeparam name="T2">Expected type of the return value</typeparam>
            <typeparam name="T3">Expected type of the return value</typeparam>
            <typeparam name="T4">Expected type of the return value</typeparam>
            <typeparam name="T5">Expected type of the return value</typeparam>
            <typeparam name="T6">Expected type of the return value</typeparam>
            <typeparam name="T7">Expected type of the return value</typeparam>
            <typeparam name="T8">Expected type of the return value</typeparam>
            <typeparam name="T9">Expected type of the return value</typeparam>
            <typeparam name="T10">Expected type of the return value</typeparam>
            <typeparam name="T11">Expected type of the return value</typeparam>
            <typeparam name="T12">Expected type of the return value</typeparam>
            <typeparam name="T13">Expected type of the return value</typeparam>
            <typeparam name="T14">Expected type of the return value</typeparam>
            <typeparam name="T15">Expected type of the return value</typeparam>
            <typeparam name="T16">Expected type of the return value</typeparam>
            <typeparam name="T17">Expected type of the return value</typeparam>
            <typeparam name="T18">Expected type of the return value</typeparam>
            <typeparam name="T19">Expected type of the return value</typeparam>
            <typeparam name="T20">Expected type of the return value</typeparam>
            <typeparam name="T21">Expected type of the return value</typeparam>
            <typeparam name="T22">Expected type of the return value</typeparam>
            <param name="response">Response of the JSON call to parse</param>
            <returns>The actual value of the call - typically a tuple of 22 values, with nested tuples for additional values</returns>
        </member>
        <member name="M:Attocube.API.AttocubeAPI.Check">
            <summary>
            Discover Attocube Devices on the network
            </summary>
            <returns>Array of discovery data describing, name, type, serialNumber, ip address, mac address and lock status</returns>
        </member>
        <member name="T:Attocube.API.JsonRpc.IJsonRpcClient">
            <summary>
            Interface defining the methods that the JSON RPC client must provide
            </summary>
        </member>
        <member name="M:Attocube.API.JsonRpc.IJsonRpcClient.ExecuteRpcCall(Attocube.API.JsonRpc.JsonRpcRequest,System.Boolean)">
            <summary>
            Methode to execute a single JSON RPC call
            </summary>
            <param name="jsonRequest">All necessary request parameters</param>
            <param name="longRequest">Indicates if the timeout timer should be adjusted to wait longer than normal requests</param>
            <returns>A JsonResponse object containing the result of the operation</returns>
        </member>
        <member name="M:Attocube.API.JsonRpc.IJsonRpcClient.close">
            <summary>
            Close any remaining connection
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.IJsonRpcClient.LastRequestJson">
            <summary>
            Property that contains the last request (in JSON format) made to the JSON RPC system
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.IJsonRpcClient.LastResponseJson">
            <summary>
            Property that contains the last response (in JSON format) received from the JSON RPC system
            </summary>
        </member>
        <member name="T:Attocube.API.JsonRpc.JsonRpcClient">
            <summary>
            Concrete implementation of the IJsonRpcClient interface
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcClient.LastRequestJson">
            <summary>
            Property that contains the last request (in JSON format) made to the JSON RPC system
            </summary>
        </member>
        <member name="M:Attocube.API.JsonRpc.JsonRpcClient.close">
            <summary>
            Close aany Connection
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcClient.LastResponseJson">
            <summary>
            Property that contains the last response (in JSON format) received from the JSON RPC system
            </summary>
        </member>
        <member name="M:Attocube.API.JsonRpc.JsonRpcClient.#ctor(System.String)">
            <summary>
            Constructor for the client class
            </summary>
            <param name="baseUrl">Base URL for the JSON RPC calls</param>
        </member>
        <member name="M:Attocube.API.JsonRpc.JsonRpcClient.ExecuteRpcCall(Attocube.API.JsonRpc.JsonRpcRequest,System.Boolean)">
            <summary>
            Execute a single JSON RPC call
            </summary>
            <param name="jsonRequest">All the relevant request parameters, bundled up into a request object</param>
            <param name="longRequest">Indicates if the timeout timer should be adjusted to wait longer than normal requests</param>
            <returns>A JsonResponse object with the response (and possibly error) from the call made</returns>
        </member>
        <member name="T:Attocube.API.JsonRpc.JsonRpcClientTcp">
            <summary>
            Concrete implementation of the IJsonRpcClient interface
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcClientTcp.LastRequestJson">
            <summary>
            Property that contains the last request (in JSON format) made to the JSON RPC system
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcClientTcp.LastResponseJson">
            <summary>
            Property that contains the last response (in JSON format) received from the JSON RPC system
            </summary>
        </member>
        <member name="M:Attocube.API.JsonRpc.JsonRpcClientTcp.#ctor(System.String,System.Int32)">
            <summary>
            Constructor for the client class
            </summary>
            <param name="ip">Ip address of the target</param>
            <param name="port">Port to connect to</param>
        </member>
        <member name="M:Attocube.API.JsonRpc.JsonRpcClientTcp.close">
            <summary>
            Close the Client
            </summary>
        </member>
        <member name="M:Attocube.API.JsonRpc.JsonRpcClientTcp.ExecuteRpcCall(Attocube.API.JsonRpc.JsonRpcRequest,System.Boolean)">
            <summary>
            Execute a single JSON RPC call
            </summary>
            <param name="jsonRequest">All the relevant request parameters, bundled up into a request object</param>
            <param name="longRequest">Indicates if the timeout timer should be adjusted to wait longer than normal requests</param>
            <returns>A JsonResponse object with the response (and possibly error) from the call made</returns>
        </member>
        <member name="T:Attocube.API.JsonRpc.JsonRpcError">
            <summary>
            Possible JsonRPC error that can occur
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcError.Code">
            <summary>
            A numeric error code
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcError.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcError.Data">
            <summary>
            Additional data for the error (depends on context)
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcError.InnerException">
            <summary>
            Possible inner .NET exception
            </summary>
        </member>
        <member name="T:Attocube.API.JsonRpc.JsonRpcRequest">
            <summary>
            JSON RPC request class
            </summary>
        </member>
        <member name="M:Attocube.API.JsonRpc.JsonRpcRequest.#ctor">
            <summary>
            Standard constructor - sets the "JsonRpc" property to "2.0" and initializes the "Parameters" array
            </summary>
        </member>
        <member name="M:Attocube.API.JsonRpc.JsonRpcRequest.#ctor(System.String)">
            <summary>
            Extended constructor, which also takes the JSON RPC method to call as a parameter
            </summary>
            <param name="methodName">Name of the RPC method to call</param>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcRequest.JsonRpc">
            <summary>
            "JsonRpc" marker for the requests - must be set to "2.0" for JSON RPC v2.0
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcRequest.Method">
            <summary>
            Method to call - depends on the JSON RPC host being called
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcRequest.Id">
            <summary>
            Internal "id" - should be unique for each request, will be returned in response to allow matching
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcRequest.Parameters">
            <summary>
            Array of positional parameters for the JSON RPC call
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcRequest.api">
            <summary>
            API version. Should be 2
            </summary>
        </member>
        <member name="T:Attocube.API.JsonRpc.JsonRpcResponse">
            <summary>
            JSON RPC response class
            </summary>
        </member>
        <member name="M:Attocube.API.JsonRpc.JsonRpcResponse.#ctor">
            <summary>
            Standard constructor, sets the "JsonRpc" property to "2.0" for JSON RPC v2.0
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcResponse.JsonRpc">
            <summary>
            "JsonRpc" marker for the requests - must be set to "2.0" for JSON RPC v2.0
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcResponse.Result">
            <summary>
            Arbitrary result object - could be a string, an int, an object type - depends on the call
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcResponse.Id">
            <summary>
            Internal "id" received from the request
            </summary>
        </member>
        <member name="P:Attocube.API.JsonRpc.JsonRpcResponse.Error">
            <summary>
            Possible error - if left NULL, then there's no error
            </summary>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Adjustment_GetContrastInPermille(System.Int32)">
            <summary>
            This function can be used to monitor the alignment contrast (peak-to-peak of the basic interference signal amplitude) and the baseline (its offset) during alignment mode.
            </summary>
            <param name="axis">[0|1|2]</param>
            <returns>
              [0] value_contrast: contrast contrast of the base band signal in permille
              [1] value_baseline: baseline offset of the contrast measurement in permille
              [2] value_mixcontrast: mixcontrast lower contrast measurement when measuring a mixed contrast (indicated by error code)
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Adjustment_GetAdjustmentEnabled">
            <summary>
            This function can be used to see if the adjustment is running.
            </summary>
            <returns>
              [0] value_enabled: enabled true = enabled; false = disabled
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Axis_GetPassMode">
            <summary>
            Reads out the current pass mode.
            </summary>
            <returns>
              [0] value_mode: mode 0 = single; pass 1 = dual pass
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Axis_SetPassMode(System.Int32)">
            <summary>
            Sets the desired pass mode.
            </summary>
            <param name="mode">0 = single pass; 1 = dual pass</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Axis_GetMasterAxis">
            <summary>
            Returns the master axis (for more information, please refer to the device user manual).
            </summary>
            <returns>
              [0] value_axis: axis [0|1|2]
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Axis_SetMasterAxis(System.Int32)">
            <summary>
            Sets the master axis (for more information, please refer to the device user manual).
            </summary>
            <param name="axis">[0|1|2]</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Axis_Apply">
            <summary>
            Applies new axis settings.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Axis_SetAutoMasterAxis(System.Boolean)">
            <summary>
            Enables the automatic configuration of the master axis during measurement initialization.
            </summary>
            <param name="automatic">true = automatic; false = manual</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Axis_GetAutoMasterAxis">
            <summary>
            Gets status of the automatic configuration of the master axis.
            </summary>
            <returns>
              [0] value_automatic: automatic true = automatic; false = manual (default: true)
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Axis_Discard">
            <summary>
            Discards new axis settings.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Displacement_GetMeasurementEnabled">
            <summary>
            This function can be used to see if the measurement is running.
            </summary>
            <returns>
              [0] value_enabled: enabled true = enabled; false = disabled
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Displacement_GetAverageN">
            <summary>
            Reads out the averaging (lowpass) parameter N.
            </summary>
            <returns>
              [0] value_averageN: averageN value from 0 to 24
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Displacement_SetAverageN(System.Int32)">
            <summary>
            Sets the averaging (lowpass) parameter N.
            </summary>
            <param name="averageN">value from 0 to 24</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Displacement_GetAxisSignalQuality(System.Int32)">
            <summary>
            This function can be used to monitor the signal contrast (peak-to-peak of the basic interference signal amplitude) and the baseline (its offset) during a running measurement.
            </summary>
            <param name="axis">[0|1|2]</param>
            <returns>
              [0] value_contrast: contrast contrast of the base band signal in permille
              [1] value_baseline: baseline offset of the contrast measurement in permille
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Displacement_GetReferencePosition(System.Int32)">
            <summary>
            Reads out the reference position value of the specific measurement axis./nThe reference position information is estimated at the measurement initialization procedure or on reset position.
            </summary>
            <param name="axis">[0|1|2]</param>
            <returns>
              [0] value_position: position reference position of the axis in pm
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Displacement_GetReferencePositions">
            <summary>
            Reads out the reference position value of all three measurement axes.
            </summary>
            <returns>
              [0] value_position1: position0 reference position of the axis 0 in pm
              [1] value_position2: position1 reference position of the axis 1 in pm
              [2] value_position3: position2 reference position of the axis 2 in pm
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Displacement_GetAbsolutePosition(System.Int32)">
            <summary>
            This function outputs the sum of the static absolute position register value and the continuously updated displacement register value for a specific measurement axis.
            </summary>
            <param name="axis">[0|1|2]</param>
            <returns>
              [0] value_position: position absolute position of the axis in pm
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Displacement_GetAbsolutePositions">
            <summary>
            This function outputs the sum of the static absolute position register value and the continuously updated displacement register value for all three measurement axes.
            </summary>
            <returns>
              [0] value_position1: position0 absolute position of the axis 0 in pm
              [1] value_position2: position1 absolute position of the axis 1 in pm
              [2] value_position3: position2 absolute position of the axis 2 in pm
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Displacement_GetAxisDisplacement(System.Int32)">
            <summary>
            Reads out the displacement value of a specific measurement axis.
            </summary>
            <param name="axis">[0|1|2]</param>
            <returns>
              [0] value_displacement: displacement displacement of the axis in pm
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Displacement_GetAxesDisplacement">
            <summary>
            Reads out the displacement values of all three measurement axes.
            </summary>
            <returns>
              [0] value_displacement1: displacement0 displacement of the axis 0 in pm
              [1] value_displacement2: displacement1 displacement of the axis 1 in pm
              [2] value_displacement3: displacement2 displacement of the axis 2 in pm
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Pilotlaser_Enable">
            <summary>
            Enables the pilot laser.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Pilotlaser_Disable">
            <summary>
            Disables the pilot laser.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Pilotlaser_GetEnabled">
            <summary>
            Reads out whether the pilot laser is enabled or not.
            </summary>
            <returns>
              [0] value_enabled: enabled true = enabled; false = disabled
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetRtOutMode">
            <summary>
            Reads out the current real-time output mode.
            </summary>
            <returns>
              [0] value_rtOutMode: rtOutMode 0 = HSSL (LVTTL), 1 = HSSL (LVDS), 2 = AquadB (LVTTL),/n3 = AquadB (LVDS), 4 = Sin/Cos (LVTTL error signal),/n5 = Sin/Cos (LVDS error signal), 6 = Linear (LVTTL error signal), 7 = Linear (LVDS error signal),/n8 = BiSS-C, 9 = Deactivated
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetRtOutMode(System.Int32)">
            <summary>
            Sets the real-time output mode.
            </summary>
            <param name="rtOutMode">0 = HSSL (LVTTL), 1 = HSSL (LVDS), 2 = AquadB (LVTTL),/n3 = AquadB (LVDS), 4 = Sin/Cos (LVTTL error signal),/n5 = Sin/Cos (LVDS error signal), 6 = Linear (LVTTL error signal), 7 = Linear (LVDS error signal),/n8 = BiSS-C, 9 = Deactivated</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetRtDistanceMode">
            <summary>
            Reads out the distance mode.
            </summary>
            <returns>
              [0] value_mode: mode 1 = Displacement (all modes)/n2 = Absolute Distance (HSSL mode and BiSS C mode)/n3 = Vibrometry (Linear mode only)
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetRtDistanceMode(System.Int32)">
            <summary>
            Sets the distance mode.
            </summary>
            <param name="mode">1 = Displacement (all modes)/n2 = Absolute Distance (HSSL mode and BiSS C mode)/n3 = Vibrometry (Linear mode only)</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetResolutionBissC">
            <summary>
            Reads out the BiSS C resolution.
            </summary>
            <returns>
              [0] value_resolution: resolution value from 0 to 16
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetResolutionBissC(System.Int32)">
            <summary>
            Sets the BiSS C resolution.
            </summary>
            <param name="resolution">value from 0 to 16</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetResolutionHsslLow">
            <summary>
            Reads out the HSSL resolution low bit.
            </summary>
            <returns>
              [0] value_resolution: resolution value from 0 to 46
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetResolutionHsslLow(System.Int32)">
            <summary>
            Sets the HSSL resolution low bit.
            </summary>
            <param name="resolution">value from 0 to 46</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetResolutionHsslHigh">
            <summary>
            Reads out the HSSL resolution high bit.
            </summary>
            <returns>
              [0] value_resolution: resolution value from 1 to 47
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetResolutionHsslHigh(System.Int32)">
            <summary>
            Sets the HSSL resolution high bit.
            </summary>
            <param name="resolution">value from 1 to 47</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetLinearRange">
            <summary>
            Reads out the range number N of Linear analog output mode.
            </summary>
            <returns>
              [0] value_rangenumber: rangenumber value from 0 to 34
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetLinearRange(System.Int32)">
            <summary>
            Sets the range number of Linear analog output mode.
            </summary>
            <param name="rangenumber">value from 0 to 34</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetPeriodHsslClk">
            <summary>
            Reads out the HSSL period clock.
            </summary>
            <returns>
              [0] value_period: period value from 40 ns to 10200 ns
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetPeriodHsslClk(System.Int32)">
            <summary>
            Set the HSSL period clock.
            </summary>
            <param name="period">value from 40 ns to 10200 ns</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetPeriodHsslGap">
            <summary>
            Reads out the HSSL period gap as number of clocks.
            </summary>
            <returns>
              [0] value_gap: gap value from 1 to 255
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetPeriodHsslGap(System.Int32)">
            <summary>
            Set the HSSL period gap as number of clocks.
            </summary>
            <param name="gap">value from 1 to 255</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetPeriodSinCosClk">
            <summary>
            Reads out the Sin/Cos and AquadB period clock.
            </summary>
            <returns>
              [0] value_period: period value from 40 ns to 10200 ns
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetPeriodSinCosClk(System.Int32)">
            <summary>
            Sets the Sin/Cos and AquadB period clock.
            </summary>
            <param name="period">value from 40 ns to 10200 ns</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetResolutionSinCos">
            <summary>
            Reads out the Sin/Cos and AquadB resolution.
            </summary>
            <returns>
              [0] value_resolution: resolution value from 1 pm to 65535 pm
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetResolutionSinCos(System.Int32)">
            <summary>
            Sets the Sin/Cos and AquadB resolution.
            </summary>
            <param name="resolution">value from 1 pm to 65535 pm</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetHighPassCutOffFreq">
            <summary>
            Reads out the high pass filter number of Linear analog output mode.
            </summary>
            <returns>
              [0] value_filternumber: filternumber value from 1 to 24
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetHighPassCutOffFreq(System.Int32)">
            <summary>
            Sets the high pass filter number of Linear analog output mode.
            </summary>
            <param name="filternumber">value from 1 to 24</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_SetAaf(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Sets the anti-aliasing filter with assigned filter window.
            </summary>
            <param name="enable">true = enable; false = disable</param>
            <param name="attenuation">value from 3 dB to 30 dB</param>
            <param name="window">0 = Rectangular,/n1 = Cosine,/n2 = Cosine^2,/n3 = Hamming,/n4 = Raised Cosine</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetAafAttenuation">
            <summary>
            Returns the current attenuation of the anti-aliasing filter.
            </summary>
            <returns>
              [0] value_attenuation: attenuation value from 3 dB to 30 dB (default: 15 dB)
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetAafWindow">
            <summary>
            Returns the current filter window of the anti-aliasing filter.
            </summary>
            <returns>
              [0] value_window: window 0 = Rectangular,/n1 = Cosine,/n2 = Cosine^2,/n3 = Hamming,/n4 = Raised Cosine (default)
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetAafEnabled">
            <summary>
            Checks if the anti-aliasing filter is enabled.
            </summary>
            <returns>
              [0] value_enabled: enabled true = enabled; false = disabled
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_Apply">
            <summary>
            Applies new real-time settings.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_Discard">
            <summary>
            Discards new real-time settings.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_EnableTestChannel">
            <summary>
            Enables the test channel on measurement axis 0, which can be used for estimating the maximum signal range./nThis function is only available in the "system idle" state (please refer to the getCurrentMode function).
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_DisableTestChannel">
            <summary>
            Disables the test channel.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Realtime_GetTestChannelEnabled">
            <summary>
            Checks if the test channels are enabled.
            </summary>
            <returns>
              [0] value_enabled: enabled true = enabled; false = disabled
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_StopMeasurement">
            <summary>
            Stops the measurement system state.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_StartMeasurement">
            <summary>
            Starts the measurement system state./nThis function is only available in the "system idle" state (please refer to the getCurrentMode function)
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_RestartMeasurement">
            <summary>
            Restarts the absolute measurement system state./nThis function is only available in the "measurement running" state (please refer to the getCurrentMode function).
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_StartOpticsAlignment">
            <summary>
            Starts the optical alignment system state./nThis function is only available in the "system idle" state (please refer to the getCurrentMode function).
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_StopOpticsAlignment">
            <summary>
            Stops the optical alignment system state./nThis function is only available in the "optics alignment running" state (please refer to the getCurrentMode function).
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_ResetAxes">
            <summary>
            Resets the displacement value of all measurement axes to zero.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_ResetAxis(System.Int32)">
            <summary>
            Resets the displacement value of a specific measurement axis to zero.
            </summary>
            <param name="axis">[0|1|2]</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_ResetError(System.Boolean)">
            <summary>
            Resets a measurement error that has been raised with the aim to continue the interrupted measurement./nIt is configurable if an additional renormalization process (please refer to the device user manual) should be performed or not./n/n  This function can be used in two cases:/n 	1.
            </summary>
            <param name="performRenormalization">true = enable; false = disable</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_GetCurrentMode">
            <summary>
            Reads out the current device system state.
            </summary>
            <returns>
              [0] value_mode: mode "system idle", "measurement starting", "measurement running", "measurement restarting",/n"optics alignment starting", "optics alignment running", "test channels enabled"
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_GetFpgaVersion">
            <summary>
            Reads out the device FPGA version.
            </summary>
            <returns>
              [0] value_version: version version in the form X.Y.Z
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_GetDeviceType">
            <summary>
            Reads out the device type.
            </summary>
            <returns>
              [0] value_type: type type of the device (e.g. "IDS3010")
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_GetSystemError">
            <summary>
            Reads out the system error.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_GetNbrFeaturesActivated">
            <summary>
            Reads out the number of the activated features on the device.
            </summary>
            <returns>
              [0] value_nbr: nbr the number of activated features
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_GetFeaturesName(System.Int32)">
            <summary>
            Converts the device feature number to its corresponding name.
            </summary>
            <param name="featurenumber">number of features</param>
            <returns>
              [0] value_names: names name of the corresponding feature
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_GetInitMode">
            <summary>
            Returns the initialization mode.
            </summary>
            <returns>
              [0] value_mode: mode 0 = High Accuracy Initialization; 1 = Quick Initialization (default: 0)
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.System_SetInitMode(System.Int32)">
            <summary>
            Sets the mode for the initialization procedure that is performed when starting a measurement.
            </summary>
            <param name="mode">0 = High Accuracy Initialization; 1 = Quick Initialization</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Manual_GetHumidityInPercent(System.Int32)">
            <summary>
            Reads out the manually configured humidity for compensation mode 1.
            </summary>
            <param name="axis">[0|1|2]Parameter has to be -1 for the moment,individual axes will be supported in the next firmware release</param>
            <returns>
              [0] humidity: value in percent
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Manual_GetPressureInHPa(System.Int32)">
            <summary>
            Reads out the manually configured air pressure for compensation mode 1.
            </summary>
            <param name="axis">[0|1|2]Parameter has to be -1 for the moment,individual axes will be supported in the next firmware release</param>
            <returns>
              [0] pressure: value in hPa
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Manual_GetRefractiveIndex(System.Int32)">
            <summary>
            Reads out the manually configured refractive index for compensation mode 2.
            </summary>
            <param name="axis">[0|1|2]Parameter has to be -1 for the moment,individual axes will be supported in the next firmware release</param>
            <returns>
              [0] rindex: refractive index
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Manual_GetTemperatureInDegrees(System.Int32)">
            <summary>
            Reads out the manually configured temperature for compensation mode 1.
            </summary>
            <param name="axis">[0|1|2]Parameter has to be -1 for the moment,individual axes will be supported in the next firmware release</param>
            <returns>
              [0] temperature: value in degrees Celsius
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Manual_SetHumidityInPercent(System.Int32,System.Double)">
            <summary>
            Sets the manually configured humidity for compensation mode 1. The input range is defined to 0 to 100 % (valid range for the Ciddor Equation).
            </summary>
            <param name="axis">[0|1|2]Parameter has to be -1 for the moment,individual axes will be supported in the next firmware release</param>
            <param name="humidity">value from 0 % to 100 %</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Manual_SetPressureInHPa(System.Int32,System.Double)">
            <summary>
            Sets the manually configured air pressure for compensation mode 1. The input range is defined to 800 to 1200 hPa (valid range for the Ciddor Equation).
            </summary>
            <param name="axis">[0|1|2]Parameter has to be -1 for the moment,individual axes will be supported in the next firmware release</param>
            <param name="pressure">value from 800 hPa to 1200 hPa</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Manual_SetRefractiveIndex(System.Int32,System.Double)">
            <summary>
            Sets the manually configured refractive index for the compensation mode 2. The input range is defined to be greater than 1.
            </summary>
            <param name="axis">[0|1|2]Parameter has to be -1 for the moment,individual axes will be supported in the next firmware release</param>
            <param name="rindex">refractive index</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Manual_SetTemperatureInDegrees(System.Int32,System.Double)">
            <summary>
            Sets the manually configured temperature for compensation mode 1. The input range is defined to -40 to +100 °C (valid range for the Ciddor Equation).
            </summary>
            <param name="axis">[0|1|2]Parameter has to be -1 for the moment,individual axes will be supported in the next firmware release</param>
            <param name="temperature">value from -40 °C to +100 °C</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Ecu_Disable">
            <summary>
            Disables the ECU interface.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Ecu_Enable">
            <summary>
            Enables the ECU interface.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Ecu_GetConnected">
            <summary>
            Reads out whether the ECU interface is physically connected or not. Checking if the ECU is connected can only be done on an enabled ECU interface.
            </summary>
            <returns>
              [0] connected: true = connected; false = disconnected
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Ecu_GetEnabled">
            <summary>
            Reads out whether the ECU interface is enabled or not. Enabling the ECU interface is crucial for working with the ECU.
            </summary>
            <returns>
              [0] enabled: true = enabled; false = disabled
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Ecu_GetHumidityInPercent">
            <summary>
            Reads out the ECU measured air humidity in percent.
            </summary>
            <returns>
              [0] humidity: value in percent
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Ecu_GetPressureInHPa">
            <summary>
            Reads out the ECU measured air pressure in hPa.
            </summary>
            <returns>
              [0] pressure: value in hPa
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Ecu_GetRefractiveIndex">
            <summary>
            Reads out the ECU estimated refractive index from the current ECU values. To get the refractive index for other compensation modes, please refer to the getRefractiveIndexForCompensation function.
            </summary>
            <returns>
              [0] rIndex: refractive index
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Ecu_GetRefractiveIndexCompensationMode(System.Int32)">
            <summary>
            Reads out the compensation mode which is currently used for the environmental compensation.
            </summary>
            <param name="axis">[0|1|2]Parameter has to be -1 for the moment,individual axes will be supported in the next firmware release</param>
            <returns>
              [0] mode: 0 = direct ECU mode 1 = uses refractive index calculated from the manually set values2 = uses manually set refrative index
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Ecu_GetRefractiveIndexForCompensation(System.Int32)">
            <summary>
            Reads out the refractive index used according to the current environmental compensation mode for a specific measurement axis.
            </summary>
            <param name="axis">[0|1|2]Parameter has to be -1 for the moment,individual axes will be supported in the next firmware release</param>
            <returns>
              [0] rIndex: refractive index
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Ecu_GetTemperatureInDegrees">
            <summary>
            Reads out the ECU measured air temperature in degrees Celsius.
            </summary>
            <returns>
              [0] temperature: value in degrees Celsius
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Ecu_SetRefractiveIndexCompensationMode(System.Int32,System.Int32)">
            <summary>
            Sets the refractive index compensation mode.
            </summary>
            <param name="axis">[0|1|2]Parameter has to be -1 for the moment,individual axes will be supported in the next firmware release</param>
            <param name="mode">0 = direct ECU mode 1 = uses refractive index calculated from the manually set values2 = uses manually set refrative index</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_ClearLut(System.Int32)">
            <summary>
            Deactivates the LUT and removes it from the device for a specific measurement axis.
            </summary>
            <param name="axis">[0|1|2]</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_CreateLut(System.Int32)">
            <summary>
            Creates a new LUT for a specific measurement axis.
            </summary>
            <param name="axis">[0|1|2]</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_EstimateNonlinearities(System.Int32)">
            <summary>
            Estimates the nonlinearity error for the current device settings without changing or updating any settings.
            </summary>
            <param name="axis">[0|1|2]</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_GetDynamicNormalization(System.Int32)">
            <summary>
            Returns the normalization mode of a specific measurement axis.
            </summary>
            <param name="axis">[0|1|2]</param>
            <returns>
              [0] mode: 0 = dynamic normalization (default)1 = normalization frozen (for slow target drifts)2 = normalization mode determined by target velocity
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_GetHistogram(System.Int32)">
            <summary>
            Returns a histogram of the measured nonlinearity errors obtained from the last call of the createLut or estimateNonlinearites functions.
            </summary>
            <param name="axis">[0|1|2]</param>
            <returns>
              [0] histogram: histogram array
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_GetLut(System.Int32)">
            <summary>
            Returns the LUT determined by the createLut function, which can be applied by the setLutApplied function.        Attention: the LUT values represent the internal units. To convert the LUT values into nm, please multiply the LUT array by factor ((2^16-1)*(1530/2)).
            </summary>
            <param name="axis">[0|1|2]</param>
            <returns>
              [0] lut: LUT array with 512 integers
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_GetLutApplied(System.Int32)">
            <summary>
            Returns whether a LUT is applied or not for a specific measurement axis.
            </summary>
            <param name="axis">[0|1|2]</param>
            <returns>
              [0] apply: true = applied; false = disabled
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_GetLutStatus(System.Int32)">
            <summary>
            Reads out whether the LUT is available or not for a specific measurement axis.
            </summary>
            <param name="axis">[0|1|2]</param>
            <returns>
              [0] status: true if a LUT exists, else false
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_GetNonlinearityEstimation">
            <summary>
            Returns the LUT created by the estimateNonlinearities function (read-only mode) to compensate the nonlinearity error of the device for the current device settings. If no estimation was created an array of zeros is returned.        Attention: the LUT values represent the internal units. To convert the LUT values into nm, please multiply the LUT array by factor ((2^16-1)*(1530/2)).
            </summary>
            <returns>
              [0] lut: LUT array with 512 integers
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_GetRawLut(System.Int32)">
            <summary>
            Returns the raw LUT created by the createLut or estimateNonlinearites functions.        Attention: the LUT values represent the internal units. To convert the LUT values into nm, please multiply the LUT array by factor ((2^16-1)*(1530/2)).            For debugging only.
            </summary>
            <param name="axis">[0|1|2]</param>
            <returns>
              [0] raw_lut: Json dumped lut array
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_GetVelocityThresholds">
            <summary>
            Returns the threshold velocities for mode 2 of the setDynamicNormalization function.
            </summary>
            <returns>
              [0] velocityOn: target velocity in µm/s (default: 10 µm/s)
              [1] velocityOff: target velocity in µm/s (default: 5 µm/s)
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_SetDynamicNormalization(System.Int32,System.Int32)">
            <summary>
            Sets the normalization mode of a specific measurement axis.
            </summary>
            <param name="axis">[0|1|2]</param>
            <param name="mode">0 = dynamic normalization 1 = normalization frozen (for slow target drifts)2 = automatic alternation between mode 0 and 1 depending on the target velocity</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_SetLut(System.Int32,System.String)">
            <summary>
            Uploads a LUT for a specific measurement axis, which can be applied by the setLutApplied function.
            </summary>
            <param name="axis">[0|1|2]</param>
            <param name="lut">LUT array with 512 integers</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_SetLutApplied(System.Int32,System.Boolean)">
            <summary>
            Applies the LUT for a specific measurement axis.
            </summary>
            <param name="axis">[0|1|2]</param>
            <param name="apply">true = apply LUT; false = disable LUT</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Nlc_SetVelocityThresholds(System.Int32,System.Int32)">
            <summary>
            Sets the threshold velocities for mode 2 of the setDynamicNormalization function. By default, the normalization in mode 2 is frozen for velocities below 5 µm/s and switches to dynamic mode for velocities above 10 µm/s.
            </summary>
            <param name="velocityOn">target velocity in µm/s (default: 10 µm/s)</param>
            <param name="velocityOff">target velocity in µm/s (default: 5 µm/s)</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.About_GetInstalledPackages">
            <summary>
            Get list of packages installed on the device.
            </summary>
            <returns>
              [0] value_string: string: comma separated list of packages
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.About_GetPackageLicense(System.String)">
            <summary>
            Get the license for a specific package.
            </summary>
            <param name="pckg">string: Package name</param>
            <returns>
              [0] value_string: string: license for this package
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Update_GetSwUpdateProgress">
            <summary>
            Gets the progress of running update.
            </summary>
            <returns>
              [0] value_progress: progress value in %
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Update_GetLicenseUpdateProgress">
            <summary>
            Gets the progress of running license update.
            </summary>
            <returns>
              [0] value_progress: progress value in %
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Update_SoftwareUpdateBase64">
            <summary>
            Executes the update with base 64 file uploaded.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Update_UploadSoftwareImageBase64(System.Int32,System.String)">
            <summary>
            Uploads new firmware image in format base 64.
            </summary>
            <param name="offset">offset of the data</param>
            <param name="b64Data">base64 data string</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Update_UploadLicenseBase64(System.Int32,System.String)">
            <summary>
            Uploads new license file in format base 64.
            </summary>
            <param name="offset">offset of the data</param>
            <param name="b64Data">base64 data string</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Update_LicenseUpdateBase64">
            <summary>
            Executes the license update with base64 file uploaded.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetRealIpAddress">
            <summary>
            Gets the real IP address of the device set to the network interface (br0, eth1 or eth0).
            </summary>
            <returns>
              [0] value_IP: IP IP address
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetIpAddress">
            <summary>
            Gets the IP address of the device.
            </summary>
            <returns>
              [0] value_IP: IP address as string
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_SetIpAddress(System.String)">
            <summary>
            Sets the IP address of the device.
            </summary>
            <param name="address">IP address as string</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetSubnetMask">
            <summary>
            Gets the subnet mask of the device.
            </summary>
            <returns>
              [0] value_Subnet: Subnet mask as string
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_SetSubnetMask(System.String)">
            <summary>
            Sets the subnet mask of the device.
            </summary>
            <param name="netmask">subnet mask as string</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetDefaultGateway">
            <summary>
            Gets the default gateway of the device.
            </summary>
            <returns>
              [0] value_Default: Default gateway
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_SetDefaultGateway(System.String)">
            <summary>
            Sets the default gateway of the device.
            </summary>
            <param name="gateway">Default gateway as string</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetDnsResolver(System.Int32)">
            <summary>
            Gets the DNS resolver.
            </summary>
            <param name="priority">priority of DNS resolver (0 = default, 1 = backup)</param>
            <returns>
              [0] value_resolver: resolver IP address of DNS resolver
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_SetDnsResolver(System.Int32,System.String)">
            <summary>
            Sets the DNS resolver.
            </summary>
            <param name="priority">priority of DNS resolver (0 = default, 1 = backup)</param>
            <param name="resolver">IP address of DNS resolver</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetProxyServer">
            <summary>
            Gets the proxy settings of the device.
            </summary>
            <returns>
              [0] value_proxyServer: proxyServer proxy server setting, empty for no proxy
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_SetProxyServer(System.String)">
            <summary>
            Sets the proxy server of the device.
            </summary>
            <param name="proxyServer">proxy server setting</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetEnableDhcpServer">
            <summary>
            Gets the status of DHCP server.
            </summary>
            <returns>
              [0] value_enabled: enabled true = enabled, false = disabled
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_SetEnableDhcpServer(System.Boolean)">
            <summary>
            Enables or disables DHCP server.
            </summary>
            <param name="enable">true = enable, false = disable</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetEnableDhcpClient">
            <summary>
            Gets the status of DHCP client.
            </summary>
            <returns>
              [0] value_enabled: enabled true = enabled, false = disabled
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_SetEnableDhcpClient(System.Boolean)">
            <summary>
            Enables or disables DHCP client.
            </summary>
            <param name="enable">true = enable, false = disable</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_Apply">
            <summary>
            Applies the temporary IP configuration and loads it.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_Verify">
            <summary>
            Verifies if the temporary IP configuration is correct.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_Discard">
            <summary>
            Discards the temporary IP configuration.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetWifiPresent">
            <summary>
            Checks if a WiFi interface is present.
            </summary>
            <returns>
              [0] value_present: present true if the interface is present, else false
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_SetWifiMode(System.Int32)">
            <summary>
            Changes the operation mode of the WiFi adapter.
            </summary>
            <param name="mode">0 = access point; 1 = WiFi client</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetWifiMode">
            <summary>
            Gets the operation mode of the WiFi adapter.
            </summary>
            <returns>
              [0] value_mode: mode 0 = access point; 1 = WiFi client
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_SetWifiSSID(System.String)">
            <summary>
            Changes the SSID of the network hosted (mode: access point) or connected to (mode: client).
            </summary>
            <param name="SSID">SSID string</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetWifiSSID">
            <summary>
            Gets the SSID of the network hosted (mode: access point) or connected to (mode: client).
            </summary>
            <returns>
              [0] value_SSID: SSID SSID string
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_SetWifiPassphrase(System.String)">
            <summary>
            Changes the passphrase of the network hosted (mode: access point) or connected to (mode: client).
            </summary>
            <param name="psk">pre-shared key</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_GetWifiPassphrase">
            <summary>
            Gets the passphrase of the network hosted (mode: Access point) or connected to (mode: client).
            </summary>
            <returns>
              [0] value_psk: psk pre-shared key
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.Network_ConfigureWifi(System.Int32,System.String,System.String)">
            <summary>
            Changes the WiFi configuration and applies it.
            </summary>
            <param name="mode">0 = access point; 1: WiFi client</param>
            <param name="SSID">SSID string</param>
            <param name="psk">pre-shared key</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.SetDeviceName(System.String)">
            <summary>
            Sets custom name for the device.
            </summary>
            <param name="name">device name</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.GetDeviceName">
            <summary>
            Gets the current device name.
            </summary>
            <returns>
              [0] value_name: name current device name
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.RebootSystem">
            <summary>
            Reboots the device.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.FactoryReset">
            <summary>
            Turns on the factory reset flag.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.SoftReset">
            <summary>
            Performs a soft reset (factory reset without deleting the network settings).
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.ErrorNumberToString(System.Int32,System.Int32)">
            <summary>
            Gets a description of an error code.
            </summary>
            <param name="language">integer: Language code 0 for the error name, 1 for a more user-friendly error message</param>
            <param name="errNbr">error code to translate</param>
            <returns>
              [0] value_message: message error description
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.ErrorNumberToRecommendation(System.Int32,System.Int32)">
            <summary>
            Gets a recommendation for the error code.
            </summary>
            <param name="language">integer: Language code</param>
            <param name="errNbr">error code to translate</param>
            <returns>
              [0] value_string: string: error recommendation (currently returning an int = 0 until we have recommendations)
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.GetFirmwareVersion">
            <summary>
            Gets the firmware version of the device.
            </summary>
            <returns>
              [0] value_FWversion: FWversion firmware version
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.GetHostname">
            <summary>
            Returns the device hostname.
            </summary>
            <returns>
              [0] value_name: name hostname
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.GetMacAddress">
            <summary>
            Gets the mac address of the device.
            </summary>
            <returns>
              [0] value_mac: mac mac address
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.GetSerialNumber">
            <summary>
            Gets the serial number of the device.
            </summary>
            <returns>
              [0] value_SN: SN serial number
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.GetFluxCode">
            <summary>
            Gets the flux code of the system.
            </summary>
            <returns>
              [0] value_code: code flux code
            </returns>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.UpdateTimeFromInternet">
            <summary>
            Updates system time by querying attocube.com.
            </summary>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
        <member name="M:Attocube.SEN_1_0_0.AttocubeSEN.SetTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets system time manually.
            </summary>
            <param name="day">value from 1 to 31</param>
            <param name="month">value from 1 to 12</param>
            <param name="year">value (e.g. 2021)</param>
            <param name="hour">value from 0 to 23</param>
            <param name="minute">value from 0 to 59</param>
            <param name="second">value from 0 to 59</param>
            <exception cref="T:Attocube.API.Error.AttocubeAPIException">Thrown if the call failed - e.g. response is null or invalid, some error was signalled by the embedded target</exception>
        </member>
    </members>
</doc>
